- ProductService.getCreateProductCommonData
    - new db query db.dates.findOrCreate
    - RetailerService.getRetailerByName, the function assumes there is one common retailer for all the products in the list. It only queries the retailer data for the first product in the list. 
Maybe the function should have instead one more argument, the retailer next to the products list.
        - CountryService.getCountryByISO
            - new db query db.country.scope('withoutDates').findOne
        - new db query db.retailer.findOne

- for every product in the list
    - ProductService.fetchWaitroseProductEAN, this is fetching data from a url while the update is happening. Is it possible to do this in bulk before createProducts is called?
    - new db query db.product.findOne (sourceId, retailerId, dateId)
    - new db query createProductsData (sel_ins_productsData). The structure of each product element in the list of products includes the productRank/featuredRank and other attributes needed for the record in productsData table. It also includes the promotion data and other related data for other tables. The structure provides these attributes only for a single record in productsData, i.e., it is not in a form of a list but extending the base record. The database structure allows for more retailerTaxonomies and searches under which this product record can appear in a single day. There is only a single product record in the sample data so it is not possible to be certain, but all this leads to a conclusion that much of the data each element in the products list has is redundant, i.e., the product's data remains same while the ranking data changes.
    - new db query createAmazonProduct (sel_ins_amazonProducts)
    - new db query BrandService.getBrandByCheckList,  db.brands.findAll
    - findCreateProductCore
        - new db query db.coreProductBarcode.findOne
        - new db query db.coreProduct.scope
        - new db query sel_ins_coreProductBarcodes
        - new db query core.update({ disabled: false 
        - new db query db.coreRetailer.findOne
        - new db query db.coreProduct.scope
        - new db query sel_ins_coreProductBarcodes
    - createCoreBy
        - AWSUtil.uploadImage, this can be done in a batch for all the products
        - new db query CoreProductService.createProduct
        - new db query CoreProductService.createBarcode
        - new db query CoreProductService.createProductCountryData
        - new db query core.update(productOptions)
    - createProductBy
        - new db query db.product.findOne
        - new db query db.product.create
        - new db query createProductsData, sel_ins_productsData (again)
        - new db query createAmazonProduct, sel_ins_amazonProducts (again)
    - new db query sel_ins_coreRetailers
    - new db query retailerTaxonomy.findOne
    - new db query sel_ins_coreRetailerTaxonomies
    - PromotionService.processProductPromotions 
        - new db query findRetailerPromotion, db.retailerPromotion.findAll
        - new db query db.promotionMechanic.findOrCreate
        - new db query db.retailerPromotion.findOrCreate            
    - PromotionService.calculateMultibuyPrice 
    - promo.find
    - calculateAggregated
        - new db query db.product.findOne
        - new db query db.coreProductCountryData.findOne
        - new db query ins_aggregatedProducts
    - setCoreRetailerDate
        - new db query db.coreRetailerDate.findOrCreate